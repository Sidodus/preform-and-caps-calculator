{"version":3,"sources":["actions/types.js","reducers/preform_grams_reducer.js","reducers/preform_price_per_kg_reducer.js","reducers/cap_price_per_unit_reducer.js","reducers/cap_label_unit_price_reducer.js","reducers/preform_pack_pieces_reducer.js","reducers/caps_pack_pieces_reducer.js","reducers/calculate_preform_pieces_reducer.js","reducers/calculate_cap_pieces_reducer.js","reducers/calculate_preform_kg_reducer.js","reducers/process_caps_result_reducer.js","reducers/process_preform_result_reducer.js","reducers/preform_pack_kg_reducer.js","reducers/toggle_how_to_use_reducer.js","reducers/index.js","store.js","components/layout/Preform_Cap_Logo.png","components/layout/Header.jsx","actions/preformPackKgAction.js","components/utils/processAllResults.js","components/utils/displayResults.js","components/utils/DisplayResultsTable.jsx","components/pages/preform/PreformResult.jsx","components/utils/AlertInputDanger.jsx","components/pages/preform/PreformBody.jsx","actions/preformPackPiecesAction.js","actions/processPreformResultAction.js","components/pages/preform/PreformHeader.jsx","actions/preformPricePerKgAction.js","actions/preformGramsAction.js","components/pages/preform/Preform.jsx","components/pages/caps/CapsHeader.jsx","actions/capPricePerUnitAction.js","actions/capLabelUnitPriceAction.js","components/pages/caps/CapsResult.jsx","components/pages/caps/CapsBody.jsx","actions/capPackPiecesAction.js","actions/calculateCapPiecesAction.js","actions/processCapsResultAction.js","components/pages/caps/Caps.jsx","components/pages/About.jsx","components/pages/Formula.jsx","components/pages/NotFound.jsx","components/layout/Footer.jsx","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js","components/utils/desktopPwa.js"],"names":["PREFORM_GRAMS","PREFORM_PRICE_PER_KG","CAP_PRICE_PER_UNIT","CAP_LABEL_UNIT_PRICE","PREFORM_PACK_PIECES","CAP_PACK_PIECES","CALCULATE_PREFORM_PIECES","CALCULATE_CAP_PIECES","CALCULATE_PREFORM_KG","PROCESS_CAPS_RESULT","PROCESS_PREFORM_RESULT","PREFORM_PACK_KG","TOGGLE_HOW_TO_USE","initialState","grams","preform_grams_reducer","state","action","type","payload","price","preform_price_per_kg_reducer","cap_price_per_unit_reducer","label_price","cap_label_unit_price_reducer","preform_pieces","preform_pack_pieces_reducer","cap_pieces","cap_pack_pieces_reducer","calculate_preform_pieces_reducer","calculate_cap_pieces_reducer","preform_kg","calculate_preform_kg_reducer","result","process_caps_result","process_preform_result","pack_kg","preform_pack_kg_reducer","toggle","toggle_how_to_use_reducer","combineReducers","preform_grams","preform_price_per_kg","cap_price_per_unit","cap_label_unit_price","preform_pack_pieces","cap_pack_pieces","calculate_preform_pieces","calculate_cap_pieces","calculate_preform_kg","process_caps_result_reducer","process_preform_result_reducer","preform_pack_kg","toggle_how_to_use","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","f","Header","toggleHowToUse","toggler","JSON","parse","sessionStorage","getItem","setItem","document","getElementById","style","color","className","boxShadow","onMouseOver","opacity","onMouseOut","to","id","src","Preform_Cap_Logo","alt","width","margin","href","data-toggle","data-target","onClick","this","Component","preformPackKg","preformPackPieces","preformGrams","dispatch","a","kg","String","processAllResults","data","preformPiecesInput","preform_pieces_per_pack","preform_kg_per_pack","preformKgInput","capsPiecesInput","capsPiecesPerPack","totalName","Big","toFixed","totalPacks","div","totalCrates","capLabelUnitPrice","capLabelTotalPrice","times","totalAmount","plus","unitAmount","totalKg","displayNum","input","decimalStep","JSnumberToWordProcessor","map","res","displayWholeNum","decimalPoint","displayDecimalNum","Math","random","displayWord","money","Number","displayWholeWord","fontSize","displayDecimalWord","DisplayResultsTable","props","borderRadius","PreformResult","click","border","connect","AlertInputDanger","PreformBody","changePreformPackPieces","preformPiecesInputStep","preformKgInputStep","valueChanged","e","setState","target","name","value","changePreformPiecePerPackBtn","preventDefault","calculatePreformPiecesBtn","processPreformResult","display","setTimeout","calculatePreformKgBtn","onSubmit","htmlFor","marginLeft","min","step","placeholder","onChange","required","nextProps","preState","unitPreformGrams","pieces","PreformHeader","preformGramsInput","preformPriceInput","submitPreformPrice","preformPricePerKg","submitPreformGrams","Preform","preformPiecesPerPack","querySelector","innerText","backgroundImage","propType","PropTypes","string","isRequired","func","CapsHeader","inputCapPrice","inputCapLabelPrice","submitCapPrice","capPricePerUnit","submitCapLabelPrice","max","unitPrice","CapsResult","CapsBody","changeCapsPackPieces","capsPiecesInputStep","changeCapPiecesPerPackBtn","capsPackPieces","calculateCapPiecesBtn","processCapsResult","htmlhtmlFor","float","calculateCapPieces","Caps","About","backgroundColor","paddingBottom","clear","rel","Formula","marginBottom","listStyleType","NotFound","Footer","thisYear","Date","getFullYear","presentYear","textAlign","marginTop","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","deferredPrompt","addBtn","prompt","userChoice","choiceResult","outcome","desktopPwa"],"mappings":"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","file":"static/js/main.8d65dd37.chunk.js","sourcesContent":["export const PREFORM_GRAMS = \"PREFORM_GRAMS\";\r\nexport const PREFORM_PRICE_PER_KG = \"PREFORM_PRICE_PER_KG\";\r\nexport const CAP_PRICE_PER_UNIT = \"CAP_PRICE_PER_UNIT\";\r\nexport const CAP_LABEL_UNIT_PRICE = \"CAP_LABEL_UNIT_PRICE\";\r\nexport const PREFORM_PACK_PIECES = \"PREFORM_PACK_PIECES\";\r\nexport const CAP_PACK_PIECES = \"CAP_PACK_PIECES\";\r\nexport const CALCULATE_PREFORM_PIECES = \"CALCULATE_PREFORM_PIECES\";\r\nexport const CALCULATE_CAP_PIECES = \"CALCULATE_CAP_PIECES\";\r\nexport const CALCULATE_PREFORM_KG = \"CALCULATE_PREFORM_KG\";\r\nexport const PROCESS_CAPS_RESULT = \"PROCESS_CAPS_RESULT\";\r\nexport const PROCESS_PREFORM_RESULT = \"PROCESS_PREFORM_RESULT\";\r\nexport const PREFORM_PACK_KG = \"PREFORM_PACK_KG\";\r\nexport const TOGGLE_HOW_TO_USE = \"TOGGLE_HOW_TO_USE\";\r\n","import { PREFORM_GRAMS } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  grams: \"24.7\",\r\n};\r\n\r\nconst preform_grams_reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case PREFORM_GRAMS:\r\n      return {\r\n        ...state,\r\n        grams: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default preform_grams_reducer;\r\n","import { PREFORM_PRICE_PER_KG } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  price: \"850\",\r\n};\r\n\r\nconst preform_price_per_kg_reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case PREFORM_PRICE_PER_KG:\r\n      return {\r\n        ...state,\r\n        price: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default preform_price_per_kg_reducer;\r\n","import { CAP_PRICE_PER_UNIT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  price: \"2.70\",\r\n};\r\n\r\nconst cap_price_per_unit_reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CAP_PRICE_PER_UNIT:\r\n      return {\r\n        ...state,\r\n        price: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default cap_price_per_unit_reducer;\r\n","import { CAP_LABEL_UNIT_PRICE } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  label_price: \".00\",\r\n};\r\n\r\nconst cap_label_unit_price_reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CAP_LABEL_UNIT_PRICE:\r\n      return {\r\n        ...state,\r\n        label_price: action.payload === \"0\" ? \".00\" : action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default cap_label_unit_price_reducer;\r\n","import { PREFORM_PACK_PIECES } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  preform_pieces: \"650\",\r\n};\r\n\r\nconst preform_pack_pieces_reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case PREFORM_PACK_PIECES:\r\n      return {\r\n        ...state,\r\n        preform_pieces: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default preform_pack_pieces_reducer;\r\n","import { CAP_PACK_PIECES } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  cap_pieces: \"5000\",\r\n};\r\n\r\nconst cap_pack_pieces_reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CAP_PACK_PIECES:\r\n      return {\r\n        ...state,\r\n        cap_pieces: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default cap_pack_pieces_reducer;\r\n","import { CALCULATE_PREFORM_PIECES } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  preform_pieces: \"\",\r\n};\r\n\r\nconst calculate_preform_pieces_reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CALCULATE_PREFORM_PIECES:\r\n      return {\r\n        ...state,\r\n        preform_pieces: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default calculate_preform_pieces_reducer;\r\n","import { CALCULATE_CAP_PIECES } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  cap_pieces: \"\",\r\n};\r\n\r\nconst calculate_cap_pieces_reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CALCULATE_CAP_PIECES:\r\n      return {\r\n        ...state,\r\n        cap_pieces: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default calculate_cap_pieces_reducer;\r\n","import { CALCULATE_PREFORM_KG } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  preform_kg: \"\",\r\n};\r\n\r\nconst calculate_preform_kg_reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CALCULATE_PREFORM_KG:\r\n      return {\r\n        ...state,\r\n        preform_kg: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default calculate_preform_kg_reducer;\r\n","import { PROCESS_CAPS_RESULT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  result: {},\r\n};\r\n\r\nconst process_caps_result = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case PROCESS_CAPS_RESULT:\r\n      return {\r\n        ...state,\r\n        result: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default process_caps_result;\r\n","import { PROCESS_PREFORM_RESULT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  result: {},\r\n};\r\n\r\nconst process_preform_result = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case PROCESS_PREFORM_RESULT:\r\n      return {\r\n        ...state,\r\n        result: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default process_preform_result;\r\n","import { PREFORM_PACK_KG } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  pack_kg: \"\",\r\n};\r\n\r\nconst preform_pack_kg_reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case PREFORM_PACK_KG:\r\n      return {\r\n        ...state,\r\n        pack_kg: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default preform_pack_kg_reducer;\r\n","import { TOGGLE_HOW_TO_USE } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  toggle: false,\r\n};\r\n\r\nconst toggle_how_to_use_reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_HOW_TO_USE:\r\n      return {\r\n        ...state,\r\n        toggle: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default toggle_how_to_use_reducer;\r\n","import { combineReducers } from \"redux\";\r\nimport preform_grams_reducer from \"./preform_grams_reducer\";\r\nimport preform_price_per_kg_reducer from \"./preform_price_per_kg_reducer\";\r\nimport cap_price_per_unit_reducer from \"./cap_price_per_unit_reducer\";\r\nimport cap_label_unit_price_reducer from \"./cap_label_unit_price_reducer\";\r\nimport preform_pack_pieces_reducer from \"./preform_pack_pieces_reducer\";\r\nimport cap_pack_pieces_reducer from \"./caps_pack_pieces_reducer\";\r\nimport calculate_preform_pieces_reducer from \"./calculate_preform_pieces_reducer\";\r\nimport calculate_cap_pieces_reducer from \"./calculate_cap_pieces_reducer\";\r\nimport calculate_preform_kg_reducer from \"./calculate_preform_kg_reducer\";\r\nimport process_caps_result_reducer from \"./process_caps_result_reducer\";\r\nimport process_preform_result_reducer from \"./process_preform_result_reducer\";\r\nimport preform_pack_kg_reducer from \"./preform_pack_kg_reducer\";\r\nimport toggle_how_to_use_reducer from \"./toggle_how_to_use_reducer\";\r\n\r\nexport default combineReducers({\r\n  preform_grams: preform_grams_reducer,\r\n  preform_price_per_kg: preform_price_per_kg_reducer,\r\n  cap_price_per_unit: cap_price_per_unit_reducer,\r\n  cap_label_unit_price: cap_label_unit_price_reducer,\r\n  preform_pack_pieces: preform_pack_pieces_reducer,\r\n  cap_pack_pieces: cap_pack_pieces_reducer,\r\n  calculate_preform_pieces: calculate_preform_pieces_reducer,\r\n  calculate_cap_pieces: calculate_cap_pieces_reducer,\r\n  calculate_preform_kg: calculate_preform_kg_reducer,\r\n  process_caps_result: process_caps_result_reducer,\r\n  process_preform_result: process_preform_result_reducer,\r\n  preform_pack_kg: preform_pack_kg_reducer,\r\n  toggle_how_to_use: toggle_how_to_use_reducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__\r\n      ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n      : (f) => f\r\n  )\r\n);\r\n\r\nexport default store;\r\n","export default __webpack_public_path__ + \"static/media/Preform_Cap_Logo.300fa65d.png\";","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Preform_Cap_Logo from \"../layout/Preform_Cap_Logo.png\";\r\n\r\nclass Header extends Component {\r\n  componentDidMount() {\r\n    sessionStorage.setItem(\"howToUse\", false);\r\n  }\r\n\r\n  toggleHowToUse = () => {\r\n    const toggler = JSON.parse(sessionStorage.getItem(\"howToUse\"));\r\n\r\n    sessionStorage.setItem(\"howToUse\", !toggler);\r\n\r\n    if (!toggler) {\r\n      document.getElementById(\"howToUseBtn\").style.color = \"black\";\r\n    } else {\r\n      document.getElementById(\"howToUseBtn\").style.color = \"lightgray\";\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"pb-1\"\r\n        style={{\r\n          boxShadow:\r\n            \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n        }}\r\n      >\r\n        <nav className=\"navbar navbar-expand-sm bg-primary navbar-dark\">\r\n          <span\r\n            onMouseOver={() => {\r\n              document.getElementById(\"navBrandHover\").style.opacity = \".7\";\r\n              document.getElementById(\"PCC\").style.color = \"black\";\r\n            }}\r\n            onMouseOut={() => {\r\n              document.getElementById(\"navBrandHover\").style.opacity = \"1\";\r\n              document.getElementById(\"PCC\").style.color = \"white\";\r\n            }}\r\n          >\r\n            <Link to=\"/\" className=\"navbar-brand\">\r\n              <img\r\n                id=\"navBrandHover\"\r\n                src={Preform_Cap_Logo}\r\n                alt=\"Logo\"\r\n                style={{ width: \"150px\", margin: \"-2vh 0\" }}\r\n              />\r\n            </Link>\r\n            <Link to=\"/\" className=\"navbar-brand\">\r\n              <span id=\"PCC\">Preform &amp; Caps Calculator</span>\r\n            </Link>\r\n          </span>\r\n          {/* ((((((((((((((((((((((((((((((How To Use Start)))))))))))))))))))))))))))))) */}\r\n          <ul className=\"navbar-nav mx-auto\">\r\n            <li className=\"nav-item\">\r\n              <a\r\n                href=\"/\"\r\n                id=\"howToUseBtn\"\r\n                className=\"nav-link\"\r\n                data-toggle=\"collapse\"\r\n                data-target=\"#demo\"\r\n                onClick={this.toggleHowToUse}\r\n              >\r\n                <i className=\"fa fa-book-reader\" /> How To Use\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          {/* ((((((((((((((((((((((((((((((How To Use End)))))))))))))))))))))))))))))) */}\r\n\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <span id=\"preformPage\">\r\n                  <i className=\"fa fa-vial\" /> Preform\r\n                </span>\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/caps\" className=\"nav-link\">\r\n                <span id=\"capsPage\">\r\n                  <i className=\"fa fa-lemon\" /> Caps\r\n                </span>\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/formula\" className=\"nav-link\">\r\n                <span id=\"formula\">\r\n                  <i className=\"fa fa-question-circle\" /> Formula\r\n                </span>\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <span id=\"aboutPage\">\r\n                  <i className=\"fa fa-assistive-listening-systems\" /> About\r\n                </span>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import { PREFORM_PACK_KG } from \"./types\";\r\n\r\nexport const preformPackKg = (preformPackPieces, preformGrams) => async (\r\n  dispatch\r\n) => {\r\n  const kg = String((preformPackPieces * preformGrams) / 1000);\r\n  dispatch({\r\n    type: PREFORM_PACK_KG,\r\n    payload: kg,\r\n  });\r\n};\r\n","import Big from \"big.js\";\r\n\r\nconst processAllResults = (data) => {\r\n  const {\r\n    type,\r\n    preformPiecesInput,\r\n    preformGrams,\r\n    preform_pieces_per_pack,\r\n    preform_kg_per_pack,\r\n    preform_price_per_kg,\r\n    preformKgInput,\r\n\r\n    capsPiecesInput,\r\n    capsPiecesPerPack,\r\n    cap_price_per_unit,\r\n    cap_label_unit_price,\r\n  } = data;\r\n\r\n  if (type === \"Total Caps\") {\r\n    const totalName = Big(capsPiecesInput).toFixed();\r\n    const totalPacks = Big(capsPiecesInput).div(capsPiecesPerPack).toFixed();\r\n    const totalCrates = Big(capsPiecesInput).div(12).toFixed();\r\n    const capLabelUnitPrice = Big(cap_label_unit_price).toFixed();\r\n    const capLabelTotalPrice = Big(capLabelUnitPrice)\r\n      .times(totalName)\r\n      .toFixed();\r\n    const totalAmount = Big(cap_price_per_unit)\r\n      .times(capsPiecesInput)\r\n      .plus(capLabelTotalPrice)\r\n      .toFixed();\r\n    const unitAmount = Big(cap_price_per_unit)\r\n      .plus(capLabelUnitPrice)\r\n      .toFixed();\r\n\r\n    return {\r\n      type,\r\n      totalName,\r\n      totalPacks,\r\n      totalCrates,\r\n      capLabelUnitPrice,\r\n      capLabelTotalPrice,\r\n      totalAmount,\r\n      unitAmount,\r\n    };\r\n  } else if (type === \"Total Preform\") {\r\n    const totalName = Big(preformPiecesInput).toFixed();\r\n    const totalPacks = Big(preformPiecesInput)\r\n      .div(preform_pieces_per_pack)\r\n      .toFixed();\r\n    const totalKg = Big(preformPiecesInput)\r\n      .times(preformGrams)\r\n      .div(1000)\r\n      .toFixed();\r\n    const totalCrates = Big(preformPiecesInput).div(12).toFixed();\r\n    const totalAmount = Big(totalKg).times(preform_price_per_kg).toFixed();\r\n    const unitAmount = Big(totalAmount).div(preformPiecesInput).toFixed();\r\n\r\n    return {\r\n      type,\r\n      totalName,\r\n      totalPacks,\r\n      totalKg,\r\n      totalCrates,\r\n      totalAmount,\r\n      unitAmount,\r\n    };\r\n  } else if (type === \"Total Kg\") {\r\n    const totalName = Big(preformKgInput)\r\n      .div(preform_kg_per_pack)\r\n      .times(preform_pieces_per_pack)\r\n      .toFixed();\r\n    const totalPacks = Big(preformKgInput).div(preform_kg_per_pack).toFixed();\r\n    const totalKg = Big(preformKgInput).toFixed();\r\n    const totalCrates = Big(totalName).div(12).toFixed();\r\n    const totalAmount = Big(totalKg).times(preform_price_per_kg).toFixed();\r\n    const unitAmount = Big(totalAmount).div(totalName).toFixed();\r\n\r\n    return {\r\n      type,\r\n      totalName,\r\n      totalPacks,\r\n      totalKg,\r\n      totalCrates,\r\n      totalAmount,\r\n      unitAmount,\r\n    };\r\n  }\r\n};\r\n\r\nexport default processAllResults;\r\n","import JSnumberToWordProcessor from \"js-number-to-word-processor\";\r\n\r\nexport const displayNum = (input, decimalStep) => {\r\n  return JSnumberToWordProcessor(input, decimalStep).map((res) => {\r\n    return (\r\n      <span key={String(Math.random() * 100)}>\r\n        {res.displayWholeNum}\r\n        <small>\r\n          <b>{res.decimalPoint ? res.displayDecimalNum : \"\"}</b>\r\n        </small>\r\n      </span>\r\n    );\r\n  });\r\n};\r\n\r\nexport const displayWord = (input, decimalStep, money) => {\r\n  return JSnumberToWordProcessor(input, decimalStep).map((res) => {\r\n    if (res.displayNum === \"0.00\") {\r\n      return <b key=\"zero\">Zero</b>;\r\n    }\r\n\r\n    return (\r\n      <b key={String(Math.random() * 100)}>\r\n        {/* Display Whole Number:\r\n         For Money; Only Run If Amount Is Greater Than 0\r\n        For Numbers; Always Run  */}\r\n        {money && Number(res.displayWholeNum) > 0\r\n          ? res.displayWholeWord\r\n          : !money\r\n          ? res.displayWholeWord\r\n          : Number(res.displayWholeNum) === 0\r\n          ? \"\"\r\n          : res.displayWholeWord}\r\n        {/* Add Naira To Currency Amount */}\r\n        {money && Number(res.displayWholeNum) > 0 ? (\r\n          <span\r\n            style={{ color: \"darkgray\", fontSize: \"larger\" }}\r\n            className=\"lead\"\r\n          >\r\n            {\" \"}\r\n            Naira\r\n          </span>\r\n        ) : !money ? (\r\n          \"\"\r\n        ) : Number(res.displayWholeNum) === 0 ? (\r\n          \"\"\r\n        ) : (\r\n          <span\r\n            style={{ color: \"darkgray\", fontSize: \"larger\" }}\r\n            className=\"lead\"\r\n          >\r\n            {\" \"}\r\n            Naira\r\n          </span>\r\n        )}\r\n        {/* Add Separator Before Decimal Point:\r\n         For Money; Greater Than 0; Add (&)\r\n        For Numbers; Add (point)  */}\r\n        {money && Number(res.displayWholeNum) > 0 ? (\r\n          <span style={{ color: \"darkgray\" }}>\r\n            {res.decimalPoint ? \", (&) \" : \"\"}\r\n          </span>\r\n        ) : !money ? (\r\n          <span style={{ color: \"darkgray\" }}>\r\n            {res.decimalPoint ? \", (point) \" : \"\"}\r\n          </span>\r\n        ) : Number(res.displayWholeNum) === 0 ? (\r\n          \"\"\r\n        ) : (\r\n          <span style={{ color: \"darkgray\" }}>\r\n            {res.decimalPoint ? \", (&) \" : \"\"}\r\n          </span>\r\n        )}\r\n        {/* Display Decimal Word */}\r\n        {res.decimalPoint ? res.displayDecimalWord : \"\"}{\" \"}\r\n        {/* Add \"kobo\" If Its Currency Amount & Currency Has Decimal Number */}\r\n        {money && res.decimalPoint ? (\r\n          <span\r\n            style={{ color: \"darkgray\", fontSize: \"larger\" }}\r\n            className=\"lead\"\r\n          >\r\n            kobo\r\n          </span>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </b>\r\n    );\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { displayNum, displayWord } from \"./displayResults\";\r\n\r\nexport class DisplayResultsTable extends Component {\r\n  render() {\r\n    const {\r\n      type,\r\n      totalPacks,\r\n      totalName,\r\n      totalKg,\r\n      totalCrates,\r\n      capLabelUnitPrice,\r\n      // capLabelTotalPrice,\r\n      totalAmount,\r\n      unitAmount,\r\n    } = this.props.result;\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          boxShadow:\r\n            \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n        }}\r\n      >\r\n        {type ? (\r\n          <table\r\n            style={{ borderRadius: \"50px 15px 50px 15px\" }}\r\n            className=\"table table-dark table-bordered table-striped table-hover table-responsive-sm\"\r\n          >\r\n            <tbody>\r\n              <tr\r\n                style={{\r\n                  boxShadow:\r\n                    \"0 4px 8px 0 rgba(255, 255, 255, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n                }}\r\n              >\r\n                <td>\r\n                  <h5>Total Packs:</h5>\r\n                </td>\r\n                <td>\r\n                  <h5>\r\n                    <span style={{ fontSize: \"larger\" }}>\r\n                      <span id=\"capsPacksPieces\">\r\n                        {displayNum(totalPacks)}{\" \"}\r\n                      </span>\r\n                      <small>{totalPacks > 1 ? \"Packs\" : \"Pack\"}</small>\r\n                    </span>\r\n                  </h5>\r\n                </td>\r\n                <td>\r\n                  {displayWord(totalPacks)}{\" \"}\r\n                  <span className=\"lead\" style={{ color: \"darkgray\" }}>\r\n                    {totalPacks > 1 ? \"Packs.\" : \"Pack.\"}\r\n                  </span>\r\n                </td>\r\n              </tr>\r\n              <tr\r\n                style={{\r\n                  boxShadow:\r\n                    \"0 4px 8px 0 rgba(255, 255, 255, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n                }}\r\n              >\r\n                <td>\r\n                  <h5>{type === \"Total Kg\" ? \"Total Preform\" : type}:</h5>\r\n                </td>\r\n                <td>\r\n                  <h5>\r\n                    <span style={{ fontSize: \"larger\" }}>\r\n                      <span id=\"capsPieces\">{displayNum(totalName)} </span>\r\n                      <small>{totalName > 1 ? \"Pieces\" : \"Piece\"}</small>\r\n                    </span>\r\n                  </h5>\r\n                </td>\r\n                <td>\r\n                  {displayWord(totalName)}{\" \"}\r\n                  <span className=\"lead\" style={{ color: \"darkgray\" }}>\r\n                    {totalName > 1 ? \"Pieces.\" : \"Piece.\"}\r\n                  </span>\r\n                </td>\r\n              </tr>\r\n\r\n              {type !== \"Total Caps\" ? (\r\n                <tr\r\n                  style={{\r\n                    boxShadow:\r\n                      \"0 4px 8px 0 rgba(255, 255, 255, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n                  }}\r\n                >\r\n                  <td>\r\n                    <h5>Total Kg:</h5>\r\n                  </td>\r\n                  <td>\r\n                    <h5>\r\n                      <span style={{ fontSize: \"larger\" }}>\r\n                        <span id=\"preformKg\">{displayNum(totalKg)} </span>\r\n                        <small>Kg</small>\r\n                      </span>\r\n                    </h5>\r\n                  </td>\r\n                  <td>\r\n                    {displayWord(totalKg)}{\" \"}\r\n                    <span className=\"lead\" style={{ color: \"darkgray\" }}>\r\n                      Kg.\r\n                    </span>\r\n                  </td>\r\n                </tr>\r\n              ) : null}\r\n\r\n              <tr\r\n                style={{\r\n                  boxShadow:\r\n                    \"0 4px 8px 0 rgba(255, 255, 255, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n                }}\r\n              >\r\n                <td>\r\n                  <h5>Total Crates:</h5>\r\n                </td>\r\n                <td>\r\n                  <h5>\r\n                    <span style={{ fontSize: \"larger\" }}>\r\n                      <span id=\"capsCrates\">{displayNum(totalCrates)} </span>\r\n                      <small>{totalCrates > 1 ? \"Crates\" : \"Crate\"}</small>\r\n                    </span>\r\n                  </h5>\r\n                </td>\r\n                <td>\r\n                  {displayWord(totalCrates)}{\" \"}\r\n                  <span className=\"lead\" style={{ color: \"darkgray\" }}>\r\n                    {totalCrates > 1 ? \"Crates.\" : \"Crate.\"}\r\n                  </span>\r\n                </td>\r\n              </tr>\r\n              {/* Only Display If There Is  Label Price */}\r\n              {Number(capLabelUnitPrice) > 0.0 ? (\r\n                <tr\r\n                  style={{\r\n                    boxShadow:\r\n                      \"0 4px 8px 0 rgba(255, 255, 255, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n                  }}\r\n                >\r\n                  <td>\r\n                    <h5>Label Unit Price:</h5>\r\n                  </td>\r\n                  <td>\r\n                    <h5>\r\n                      <span style={{ fontSize: \"larger\" }}>\r\n                        <span id=\"capsUnitAmount\">\r\n                          {displayNum(capLabelUnitPrice)}\r\n                        </span>\r\n                        <span className=\"lead\">k</span>\r\n                      </span>\r\n                    </h5>\r\n                  </td>\r\n                  <td>\r\n                    {displayWord(capLabelUnitPrice, null, \"money\")}.{\" \"}\r\n                    {/* <span className=\"lead\" style={{ color: \"darkgray\" }}>\r\n                    (Per Unit)\r\n                  </span> */}\r\n                  </td>\r\n                </tr>\r\n              ) : null}\r\n              <tr\r\n                style={{\r\n                  boxShadow:\r\n                    \"0 4px 8px 0 rgba(255, 255, 255, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n                }}\r\n              >\r\n                <td>\r\n                  <h5>Unit Amount:</h5>\r\n                </td>\r\n                <td>\r\n                  <h5>\r\n                    <span style={{ fontSize: \"larger\" }}>\r\n                      ₦<span id=\"capsUnitAmount\">{displayNum(unitAmount)}</span>\r\n                    </span>\r\n                  </h5>\r\n                </td>\r\n                <td>{displayWord(unitAmount, null, \"money\")}. </td>\r\n              </tr>\r\n              <tr\r\n                style={{\r\n                  boxShadow:\r\n                    \"0 4px 8px 0 rgba(255, 255, 255, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n                }}\r\n              >\r\n                <td>\r\n                  <h5>Total Amount:</h5>\r\n                </td>\r\n                <td>\r\n                  <h5>\r\n                    <span style={{ fontSize: \"larger\" }}>\r\n                      ₦<span id=\"capsAmount\">{displayNum(totalAmount)}</span>\r\n                    </span>\r\n                  </h5>\r\n                </td>\r\n                <td>{displayWord(totalAmount, null, \"money\")}. </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        ) : (\r\n          <h6 className=\"col text-danger p-2 text-center\">\r\n            You Must Enter Yor Input In The Required Field Above To Generate A\r\n            Result\r\n          </h6>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { DisplayResultsTable } from \"../../utils/DisplayResultsTable\";\r\n\r\nclass PreformResult extends Component {\r\n  componentDidMount(){\r\n    // Display Table If Its Contains Info\r\n    if(this.props.process_preform_result.type){\r\n      document.getElementById(\"TogglePreformDisplayResultBtn\").click();\r\n        sessionStorage.setItem(\"TogglePreformDisplayResultBtn\", true);\r\n    }\r\n  }\r\n\r\n  toggler() {\r\n    // Toggle Display BTN In Input Field Is Empty\r\n    let toggler = JSON.parse(\r\n      sessionStorage.getItem(\"TogglePreformDisplayResultBtn\")\r\n    );\r\n\r\n    sessionStorage.setItem(\"TogglePreformDisplayResultBtn\", !toggler);\r\n  }\r\n  render() {\r\n    const {process_preform_result} = this.props\r\n    return (\r\n      <div className=\"card-footer\" style={{ border: \"none\" }}>\r\n        <h4 className=\"row col text-secondary\">Preform Result:</h4>\r\n        <button\r\n          data-target=\"#preformResult\"\r\n          id=\"TogglePreformDisplayResultBtn\"\r\n          style={{boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\", borderRadius: \"15px 15px 50px 50px\"}}\r\n          className=\"col btn btn-outline-success btn-sm mb-4\"\r\n          data-toggle=\"collapse\"\r\n          onClick={this.toggler}\r\n        >\r\n          View Preform Result:\r\n        </button>\r\n        <div id=\"preformResult\" className=\"col collapse\">\r\n          <DisplayResultsTable result={process_preform_result} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPreformResult.propTypes = {\r\n  process_preform_result: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n  process_preform_result: state.process_preform_result.result\r\n})\r\n\r\nexport default connect(mapStateToProps)(PreformResult);","export function AlertInputDanger() {\r\n  return (\r\n    <div className=\"col small text-center alert alert-danger alert-dismissible fade show\">\r\n      <strong>\r\n        You Must Enter A Value Below To Proceed.{\" \"}\r\n        <i className=\"fa fa-hand-point-down\" />\r\n      </strong>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { preformPackPieces } from \"../../../actions/preformPackPiecesAction\";\r\nimport { preformPackKg } from \"../../../actions/preformPackKgAction\";\r\nimport { processPreformResult } from \"../../../actions/processPreformResultAction\";\r\nimport processAllResults from \"../../utils/processAllResults\";\r\n\r\nimport PreformResult from \"./PreformResult\";\r\nimport { AlertInputDanger } from \"../../utils/AlertInputDanger\";\r\n\r\nclass PreformBody extends Component {\r\n  state = {\r\n    changePreformPackPieces: \"\",\r\n    preformPiecesInput: \"\",\r\n    preformPiecesInputStep: \"\",\r\n    preformKgInput: \"\",\r\n    preformKgInputStep: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    // Hide Alert Note\r\n    document.getElementById(\"preformAlertNote\").style.display = \"none\";\r\n    document.getElementById(\"kgAlertNote\").style.display = \"none\";\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, preState) {\r\n    return {\r\n      preformPiecesInputStep: nextProps.preform_pieces_per_pack,\r\n      preformKgInputStep: nextProps.preform_kg_per_pack,\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // Close Result BTN If Opened\r\n    let toggler = JSON.parse(\r\n      sessionStorage.getItem(\"TogglePreformDisplayResultBtn\")\r\n    );\r\n\r\n    if (toggler) {\r\n      document.getElementById(\"TogglePreformDisplayResultBtn\").click();\r\n      sessionStorage.setItem(\"TogglePreformDisplayResultBtn\", false);\r\n    }\r\n  }\r\n\r\n  valueChanged = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  changePreformPiecePerPackBtn = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Only Run If User Enters An Input\r\n    const { changePreformPackPieces } = this.state;\r\n    if (changePreformPackPieces !== \"\") {\r\n      this.props.preformPackPieces(changePreformPackPieces);\r\n\r\n      this.setState({ changePreformPackPieces: \"\" });\r\n    }\r\n  };\r\n\r\n  calculatePreformPiecesBtn = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Toggle Display BTN In Input Field Is Empty\r\n    let toggler = JSON.parse(\r\n      sessionStorage.getItem(\"TogglePreformDisplayResultBtn\")\r\n    );\r\n\r\n    if (!toggler) {\r\n      document.getElementById(\"TogglePreformDisplayResultBtn\").click();\r\n      sessionStorage.setItem(\"TogglePreformDisplayResultBtn\", true);\r\n    }\r\n\r\n    // Only Run If User Enters An Input\r\n    const { preformPiecesInput } = this.state;\r\n    if (preformPiecesInput !== \"\") {\r\n      const {\r\n        preformGrams,\r\n        preform_price_per_kg,\r\n        preform_pieces_per_pack,\r\n      } = this.props;\r\n\r\n      const data = {\r\n        preformPiecesInput,\r\n        type: \"Total Preform\",\r\n        preformGrams,\r\n        preform_price_per_kg,\r\n        preform_pieces_per_pack,\r\n      };\r\n\r\n      const result = this.props.processAllResults(data);\r\n\r\n      this.props.processPreformResult(result);\r\n\r\n      this.setState({ preformPiecesInput: \"\" });\r\n    } else {\r\n      // Display Alert Note\r\n      document.getElementById(\"preformAlertNote\").style.display = \"block\";\r\n\r\n      setTimeout(function () {\r\n        document.getElementById(\"preformAlertNote\").style.display = \"none\";\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  calculatePreformKgBtn = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Display Result By Toggling Result BTN\r\n    let toggler = JSON.parse(\r\n      sessionStorage.getItem(\"TogglePreformDisplayResultBtn\")\r\n    );\r\n\r\n    if (!toggler) {\r\n      document.getElementById(\"TogglePreformDisplayResultBtn\").click();\r\n      sessionStorage.setItem(\"TogglePreformDisplayResultBtn\", true);\r\n    }\r\n\r\n    // Only Run If User Enters An Input\r\n    const { preformKgInput } = this.state;\r\n    if (preformKgInput !== \"\") {\r\n      const {\r\n        preformGrams,\r\n        preform_price_per_kg,\r\n        preform_pieces_per_pack,\r\n        preform_kg_per_pack,\r\n      } = this.props;\r\n\r\n      const data = {\r\n        preformKgInput,\r\n        type: \"Total Kg\",\r\n        preformGrams,\r\n        preform_price_per_kg,\r\n        preform_pieces_per_pack,\r\n        preform_kg_per_pack,\r\n      };\r\n\r\n      const result = this.props.processAllResults(data);\r\n\r\n      this.props.processPreformResult(result);\r\n\r\n      this.setState({ preformKgInput: \"\" });\r\n    } else {\r\n      // Display Alert Note\r\n      document.getElementById(\"kgAlertNote\").style.display = \"block\";\r\n\r\n      setTimeout(function () {\r\n        document.getElementById(\"kgAlertNote\").style.display = \"none\";\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      changePreformPackPieces,\r\n      preformPiecesInput,\r\n      preformPiecesInputStep,\r\n      preformKgInput,\r\n      preformKgInputStep,\r\n      result,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div\r\n        className=\"col-md-11 mx-auto mb-3 py-1\"\r\n        style={{\r\n          borderRadius: \"15px 15px 50px 50px\",\r\n          boxShadow:\r\n            \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n        }}\r\n      >\r\n        <div\r\n          className=\"card mt-2 mb-2\"\r\n          style={{\r\n            borderRadius: \"15px 15px 50px 50px\",\r\n            boxShadow:\r\n              \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n          }}\r\n        >\r\n          <form\r\n            onSubmit={this.changePreformPiecePerPackBtn}\r\n            className=\"card-header\"\r\n          >\r\n            <h4 className=\"row col text-secondary\">Optional Field:</h4>\r\n            <span className=\"text-secondary h6 float-right\">PREFORM</span>\r\n            <small>\r\n              <label htmlFor=\"changePreformPackPieces\">\r\n                <i className=\"col-md-6 text-dark\">\r\n                  A pack contains <span id=\"preformPackPieces\"></span> pieces of\r\n                  Preform:{\" \"}\r\n                </i>\r\n              </label>\r\n              <div\r\n                className=\"col-md-6 input-group input-group-sm mb-3\"\r\n                style={{ marginLeft: \"-17px\" }}\r\n              >\r\n                <div className=\"input-group-append\">\r\n                  <button\r\n                    id=\"changePreformPackPiecesBtn\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{\r\n                      borderRadius: \"50px 15px 50px 15px\",\r\n                      boxShadow:\r\n                        \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n                    }}\r\n                    type=\"submit\"\r\n                  >\r\n                    Change Pieces\r\n                  </button>\r\n                </div>\r\n                <input\r\n                  id=\"changePreformPackPieces\"\r\n                  style={{ borderRadius: \"50px 15px 50px 15px\" }}\r\n                  className=\"form-control\"\r\n                  type=\"number\"\r\n                  min=\"1\"\r\n                  step=\"any\"\r\n                  name=\"changePreformPackPieces\"\r\n                  placeholder=\"Per Pack\"\r\n                  value={changePreformPackPieces}\r\n                  onChange={this.valueChanged}\r\n                  required\r\n                />\r\n              </div>\r\n            </small>\r\n          </form>\r\n          <div className=\"card-body bg-secondary text-light\">\r\n            <h4 className=\"row col text-light\">\r\n              <ins>Required Field</ins>:\r\n            </h4>\r\n\r\n            {/* (((((((((((((((((((((((((((((((((START))))))))))))))))))))))))))))))))) */}\r\n            <div className=\"row col\">\r\n              <form className=\"col-md-6 mx-auto\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">\r\n                    <h5 style={{ margin: \"2vh 0 -1vh 0\" }}>\r\n                      <span className=\"text-light\">\r\n                        Enter Preform Per Pack:\r\n                      </span>\r\n\r\n                      <div className=\"col text-body d-inline-flex justify-content-between\">\r\n                        <label htmlFor=\"preformPiecesInput\">Total Pieces</label>\r\n                      </div>\r\n                    </h5>\r\n                  </label>\r\n                  {/* 99999999999999999999999999999999999999999999999999999999999 */}\r\n                  <div id=\"preformAlertNote\">\r\n                    <AlertInputDanger />\r\n                  </div>\r\n\r\n                  {/* 99999999999999999999999999999999999999999999999999999999999 */}\r\n                  <div className=\"input-group mb-3 input-group-md\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\">Pieces</span>\r\n                    </div>\r\n                    <input\r\n                      id=\"preformPiecesInput\"\r\n                      className=\"form-control\"\r\n                      type=\"number\"\r\n                      step={String(preformPiecesInputStep)}\r\n                      min={String(preformPiecesInputStep)}\r\n                      name=\"preformPiecesInput\"\r\n                      placeholder=\"Input Preform Quantity\"\r\n                      value={preformPiecesInput}\r\n                      onChange={this.valueChanged}\r\n                      required\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <button\r\n                  onClick={this.calculatePreformPiecesBtn}\r\n                  id=\"submitPreform\"\r\n                  className=\"btn btn-success mb-1\"\r\n                  style={{\r\n                    boxShadow:\r\n                      \"0 4px 8px 0 rgba(255, 255, 255, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n                    borderRadius: \"50px 50px 15px 15px\",\r\n                  }}\r\n                  type=\"submit\"\r\n                >\r\n                  Calculate Pieces\r\n                </button>\r\n              </form>\r\n              {/* (((((((((((((((((((((((((((((((((END))))))))))))))))))))))))))))))))) */}\r\n              <form className=\"col-md-6 mx-auto\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">\r\n                    <h5 style={{ margin: \"2vh 0 -1vh 0\" }}>\r\n                      <span className=\"text-light\">\r\n                        Enter Preform Per Pack:\r\n                      </span>\r\n\r\n                      <div className=\"col text-body d-inline-flex justify-content-between\">\r\n                        <label htmlFor=\"preformKgInput\">Total Kg</label>\r\n                      </div>\r\n                    </h5>\r\n                  </label>\r\n                  <div id=\"kgAlertNote\">\r\n                    <AlertInputDanger />\r\n                  </div>\r\n                  <div className=\"input-group mb-3 input-group-md\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\">Kg</span>\r\n                    </div>\r\n                    <input\r\n                      id=\"preformKgInput\"\r\n                      type=\"number\"\r\n                      step={String(preformKgInputStep)}\r\n                      min={String(preformKgInputStep)}\r\n                      className=\"form-control\"\r\n                      name=\"preformKgInput\"\r\n                      placeholder=\"Input Preform Kg\"\r\n                      value={preformKgInput}\r\n                      onChange={this.valueChanged}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <button\r\n                  onClick={this.calculatePreformKgBtn}\r\n                  id=\"submitKg\"\r\n                  className=\"btn btn-success float-right\"\r\n                  style={{\r\n                    boxShadow:\r\n                      \"0 4px 8px 0 rgba(255, 255, 255, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n                    borderRadius: \"50px 50px 15px 15px\",\r\n                  }}\r\n                  type=\"submit\"\r\n                >\r\n                  Calculate Kg\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n\r\n          <hr style={{ margin: \"0 20px -6px 20px\" }} />\r\n\r\n          {/* submittedPreformAns */}\r\n          <PreformResult result={result} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPreformBody.propTypes = {\r\n  preformPackPieces: PropTypes.func.isRequired,\r\n  preform_pieces_per_pack: PropTypes.string.isRequired,\r\n  preform_kg_per_pack: PropTypes.string.isRequired,\r\n  unitPreformGrams: PropTypes.string.isRequired,\r\n  preformPackKg: PropTypes.func.isRequired,\r\n  preformGrams: PropTypes.string.isRequired,\r\n  preform_price_per_kg: PropTypes.string.isRequired,\r\n  processAllResults: PropTypes.func.isRequired,\r\n  processPreformResult: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  preform_pieces_per_pack: state.preform_pack_pieces.preform_pieces,\r\n  preform_kg_per_pack: state.preform_pack_kg.pack_kg,\r\n  unitPreformGrams: state.preform_grams.grams,\r\n  preformGrams: state.preform_grams.grams,\r\n  preform_price_per_kg: state.preform_price_per_kg.price,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  preformPackPieces,\r\n  preformPackKg,\r\n  processAllResults,\r\n  processPreformResult,\r\n})(PreformBody);\r\n","import { PREFORM_PACK_PIECES } from \"./types\";\r\n\r\nexport const preformPackPieces = (pieces) => async (dispatch) => {\r\n  dispatch({\r\n    type: PREFORM_PACK_PIECES,\r\n    payload: pieces,\r\n  });\r\n};\r\n","import { PROCESS_PREFORM_RESULT } from \"./types\";\r\n\r\nexport const processPreformResult = (data) => async (dispatch) => {\r\n  dispatch({\r\n    type: PROCESS_PREFORM_RESULT,\r\n    payload: data,\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { preformPricePerKg } from \"../../../actions/preformPricePerKgAction\";\r\nimport { preformGrams } from \"../../../actions/preformGramsAction\";\r\n\r\nclass PreformHeader extends Component {\r\n  state = {\r\n    preformGramsInput: \"\",\r\n    preformPriceInput: \"\",\r\n  };\r\n\r\n  valueChanged = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  submitPreformPrice = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Only Run If User Enters An Input\r\n    const { preformPriceInput } = this.state;\r\n    if (preformPriceInput !== \"\") {\r\n      this.props.preformPricePerKg(preformPriceInput);\r\n\r\n      this.setState({ preformPriceInput: \"\" });\r\n    }\r\n  };\r\n\r\n  submitPreformGrams = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Only Run If User Enters An Input\r\n    const { preformGramsInput } = this.state;\r\n    if (preformGramsInput !== \"\") {\r\n      this.props.preformGrams(preformGramsInput);\r\n\r\n      this.setState({ preformGramsInput: \"\" });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row col\">\r\n        <form onSubmit={this.submitPreformPrice} className=\"col-md-6 mx-auto\">\r\n          <h4>\r\n            <label htmlFor=\"preformPriceInput\">Preform Price Per Kg: </label>\r\n            <span style={{ fontSize: \"larger\" }}>\r\n              ₦<span id=\"preformPricePerKg\"></span>\r\n            </span>\r\n          </h4>\r\n          <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                className=\"btn btn-success\"\r\n                style={{\r\n                  borderRadius: \"50px 15px 50px 15px\",\r\n                  boxShadow:\r\n                    \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n                }}\r\n                type=\"submit\"\r\n              >\r\n                Change Price\r\n              </button>\r\n            </div>\r\n            <input\r\n              id=\"preformPriceInput\"\r\n              style={{ borderRadius: \"50px 15px 50px 15px\" }}\r\n              type=\"number\"\r\n              min=\"1\"\r\n              step=\"any\"\r\n              name=\"preformPriceInput\"\r\n              className=\"form-control\"\r\n              placeholder=\"Change Preform Price\"\r\n              value={this.state.preformPriceInput}\r\n              onChange={this.valueChanged}\r\n              required\r\n            />\r\n          </div>\r\n        </form>\r\n\r\n        <form onSubmit={this.submitPreformGrams} className=\"col-md-4 mx-auto\">\r\n          <h4>\r\n            <label htmlFor=\"preformGramsInput\">Preform Unit Grams: </label>\r\n            <span id=\"PreformGrams\" style={{ fontSize: \"larger\" }}></span>\r\n            <span>grams</span>\r\n          </h4>\r\n\r\n          <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                id=\"submitGrams\"\r\n                className=\"btn btn-success\"\r\n                style={{\r\n                  borderRadius: \"50px 15px 50px 15px\",\r\n                  boxShadow:\r\n                    \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n                }}\r\n                type=\"submit\"\r\n              >\r\n                Change Grams\r\n              </button>\r\n            </div>\r\n            <input\r\n              id=\"preformGramsInput\"\r\n              style={{ borderRadius: \"50px 15px 50px 15px\" }}\r\n              type=\"number\"\r\n              min=\"1\"\r\n              step=\"any\"\r\n              name=\"preformGramsInput\"\r\n              className=\"form-control\"\r\n              placeholder=\"Set Preform Grams\"\r\n              value={this.state.preformGramsInput}\r\n              onChange={this.valueChanged}\r\n              required\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPreformHeader.propTypes = {\r\n  preformPricePerKg: PropTypes.func.isRequired,\r\n  preformGrams: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { preformPricePerKg, preformGrams })(\r\n  PreformHeader\r\n);\r\n","import { PREFORM_PRICE_PER_KG } from \"./types\";\r\n\r\nexport const preformPricePerKg = (price) => async (dispatch) => {\r\n  dispatch({\r\n    type: PREFORM_PRICE_PER_KG,\r\n    payload: price,\r\n  });\r\n};\r\n","import { PREFORM_GRAMS } from \"./types\";\r\n\r\nexport const preformGrams = (grams) => async (dispatch) => {\r\n  dispatch({\r\n    type: PREFORM_GRAMS,\r\n    payload: grams,\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { preformPackKg } from \"../../../actions/preformPackKgAction\";\r\nimport PreformBody from \"./PreformBody\";\r\nimport PreformHeader from \"./PreformHeader\";\r\n\r\nimport JSnumberToWordProcessor from \"js-number-to-word-processor\";\r\n\r\nclass Preform extends Component {\r\n  componentDidMount() {\r\n    // Manage How To Use BTN By Setting Display Color To Lightgray On Page Change\r\n    sessionStorage.setItem(\"howToUse\", false);\r\n    document.getElementById(\"howToUseBtn\").style.color = \"lightgray\";\r\n\r\n    // Manage Menu Icons On Page Load\r\n    document.getElementById(\"capsPage\").style.color = \"lightgray\";\r\n    document.getElementById(\"preformPage\").style.color = \"black\";\r\n    document.getElementById(\"aboutPage\").style.color = \"lightgray\";\r\n    document.getElementById(\"formula\").style.color = \"lightgray\";\r\n\r\n    const {\r\n      grams,\r\n      preform_price_per_kg,\r\n      preformPiecesPerPack,\r\n      unitPreformGrams,\r\n    } = this.props;\r\n\r\n    // Update Preform KG Per Pack\r\n    this.props.preformPackKg(preformPiecesPerPack, unitPreformGrams);\r\n\r\n    document.querySelector(\"#PreformGrams\").innerText = JSnumberToWordProcessor(\r\n      grams,\r\n      1\r\n    )[0].displayNum;\r\n    document.querySelector(\r\n      \"#preformPricePerKg\"\r\n    ).innerText = JSnumberToWordProcessor(\r\n      preform_price_per_kg,\r\n      2\r\n    )[0].displayNum;\r\n    document.querySelector(\r\n      \"#preformPackPieces\"\r\n    ).innerText = JSnumberToWordProcessor(\r\n      preformPiecesPerPack,\r\n      1\r\n    )[0].displayNum;\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const {\r\n      grams,\r\n      preform_price_per_kg,\r\n      preformPiecesPerPack,\r\n      unitPreformGrams,\r\n    } = this.props;\r\n\r\n    // Update Preform KG Per Pack\r\n    this.props.preformPackKg(preformPiecesPerPack, unitPreformGrams);\r\n\r\n    document.querySelector(\"#PreformGrams\").innerText = JSnumberToWordProcessor(\r\n      grams,\r\n      1\r\n    )[0].displayNum;\r\n    document.querySelector(\r\n      \"#preformPricePerKg\"\r\n    ).innerText = JSnumberToWordProcessor(\r\n      preform_price_per_kg,\r\n      2\r\n    )[0].displayNum;\r\n    document.querySelector(\r\n      \"#preformPackPieces\"\r\n    ).innerText = JSnumberToWordProcessor(\r\n      preformPiecesPerPack,\r\n      1\r\n    )[0].displayNum;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"card bg-secondary text-light\"\r\n        style={{\r\n          border: \"none\",\r\n          borderRadius: \"15px 15px 50px 50px\",\r\n          boxShadow:\r\n            \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n        }}\r\n      >\r\n        {/* ((((((((((((((((((((((((((((((++++++)))))))))))))))))))))))))))))) */}\r\n        <div\r\n          id=\"demo\"\r\n          className=\"mx-auto collapse mb-2 pr-3\"\r\n          style={{\r\n            borderRadius: \"15px 15px 50px 50px\",\r\n            boxShadow:\r\n              \"0 4px 8px 0 rgba(255, 255, 255, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n          }}\r\n        >\r\n          <h6>\r\n            <ul>\r\n              <li>\r\n                <ins>Optional Fields</ins>:\r\n              </li>\r\n              <ul>\r\n                <li>\r\n                  Only Change The Value In The Optional Field If Your Value For\r\n                  Calculation Is Different From The Default Value\r\n                </li>\r\n              </ul>\r\n            </ul>\r\n          </h6>\r\n          <h6>\r\n            <ul>\r\n              <li>\r\n                <ins>Required Field</ins>:\r\n              </li>\r\n              <ul>\r\n                <li>\r\n                  You Are Required To Enter Either The Total Pieces Of Preform\r\n                  To Be Calculated In In The \"Total Pieces\" Input Field, Then\r\n                  Click On \"Calculate Pieces\".\r\n                  <br />\r\n                  OR <br />\r\n                  Enter The Total Kilogram (Kg) Of Preform To Be Calculated In\r\n                  The \"Total Kg\" Input Field And Click On \"Calculate Kg\".\r\n                </li>\r\n              </ul>\r\n            </ul>\r\n          </h6>\r\n        </div>\r\n        {/* ((((((((((((((((((((((((((((((++++++)))))))))))))))))))))))))))))) */}\r\n        {/* <!-- Main Head --> */}\r\n        <div\r\n          className=\"card-header\"\r\n          style={{\r\n            backgroundImage:\r\n              \"linear-gradient(lightgray 1%, white 30%, rgb(187, 202, 131) 100%)\",\r\n          }}\r\n        >\r\n          <h4 className=\"col mx-auto text-secondary\">Optional Field:</h4>\r\n          <div className=\"row text-muted\">\r\n            <PreformHeader />\r\n          </div>\r\n        </div>\r\n\r\n        {/* <!-- Main Body --> */}\r\n        <div\r\n          className=\"card-body mt-1 mb-2\"\r\n          style={{\r\n            borderRadius: \"15px 15px 50px 50px\",\r\n            backgroundImage:\r\n              \"linear-gradient(rgb(187, 202, 131) 100%, white 5%, rgb(187, 202, 131) 100%)\",\r\n          }}\r\n        >\r\n          <div>\r\n            <PreformBody />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPreform.propType = {\r\n  grams: PropTypes.string.isRequired,\r\n  preform_price_per_kg: PropTypes.string.isRequired,\r\n  preformPiecesPerPack: PropTypes.string.isRequired,\r\n  unitPreformGrams: PropTypes.string.isRequired,\r\n  preformPackKg: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  grams: state.preform_grams.grams,\r\n  preform_price_per_kg: state.preform_price_per_kg.price,\r\n  preformPiecesPerPack: state.preform_pack_pieces.preform_pieces,\r\n  unitPreformGrams: state.preform_grams.grams,\r\n});\r\n\r\nexport default connect(mapStateToProps, { preformPackKg })(Preform);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { capPricePerUnit } from \"../../../actions/capPricePerUnitAction\";\r\nimport { capLabelUnitPrice } from \"../../../actions/capLabelUnitPriceAction\";\r\n\r\nclass CapsHeader extends Component {\r\n  state = {\r\n    inputCapPrice: \"\",\r\n    inputCapLabelPrice: \"\",\r\n  };\r\n\r\n  valueChanged = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  submitCapPrice = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Only Run If User Enters An Input\r\n    const { inputCapPrice } = this.state;\r\n    if (inputCapPrice !== \"\") {\r\n      this.props.capPricePerUnit(inputCapPrice);\r\n\r\n      this.setState({ inputCapPrice: \"\" });\r\n    }\r\n  };\r\n\r\n  submitCapLabelPrice = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Only Run If User Enters An Input\r\n    const { inputCapLabelPrice } = this.state;\r\n    if (inputCapLabelPrice !== \"\") {\r\n      this.props.capLabelUnitPrice(inputCapLabelPrice);\r\n\r\n      this.setState({ inputCapLabelPrice: \"\" });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row col\">\r\n        <form onSubmit={this.submitCapPrice} className=\"col-md-6 mx-auto\">\r\n          <h4>\r\n            <label htmlFor=\"inputCapPrice\">Cap Price Per Unit: </label>\r\n            <span style={{ fontSize: \"larger\" }}>\r\n              ₦<span id=\"capPricePerUnit\"></span>\r\n            </span>\r\n          </h4>\r\n          <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                className=\"btn btn-success\"\r\n                style={{\r\n                  borderRadius: \"50px 15px 50px 15px\",\r\n                  boxShadow:\r\n                    \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n                }}\r\n                type=\"submit\"\r\n              >\r\n                Change Price\r\n              </button>\r\n            </div>\r\n            <input\r\n              id=\"inputCapPrice\"\r\n              style={{ borderRadius: \"50px 15px 50px 15px\" }}\r\n              type=\"number\"\r\n              min=\"1\"\r\n              step=\"any\"\r\n              name=\"inputCapPrice\"\r\n              className=\"form-control\"\r\n              placeholder=\"Change Cap Price\"\r\n              value={this.state.inputCapPrice}\r\n              onChange={this.valueChanged}\r\n              required\r\n            />\r\n          </div>\r\n        </form>\r\n        {/* (((((((((((((((((((((((((((((((((((START))))))))))))))))))))))))))))))))))) */}\r\n        <form onSubmit={this.submitCapLabelPrice} className=\"col-md-4 mx-auto\">\r\n          <h4>\r\n            <label htmlFor=\"inputCapLabelPrice\">Cap Labelling:- </label>\r\n            <span id=\"capLabelPrice\" style={{ fontSize: \"larger\" }}></span>k\r\n          </h4>\r\n\r\n          <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                id=\"submitCapLabelBtn\"\r\n                className=\"btn btn-success\"\r\n                style={{\r\n                  borderRadius: \"50px 15px 50px 15px\",\r\n                  boxShadow:\r\n                    \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n                }}\r\n                type=\"submit\"\r\n              >\r\n                Set Label Unit Price\r\n              </button>\r\n            </div>\r\n            <input\r\n              id=\"inputCapLabelPrice\"\r\n              style={{ borderRadius: \"50px 15px 50px 15px\" }}\r\n              type=\"number\"\r\n              min=\".00\"\r\n              max=\".99\"\r\n              step=\".01\"\r\n              name=\"inputCapLabelPrice\"\r\n              className=\"form-control\"\r\n              placeholder=\"Cap Label Unit Price\"\r\n              value={this.state.inputCapLabelPrice}\r\n              onChange={this.valueChanged}\r\n              required\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCapsHeader.propTypes = {\r\n  capPricePerUnit: PropTypes.func.isRequired,\r\n  capLabelUnitPrice: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { capPricePerUnit, capLabelUnitPrice })(\r\n  CapsHeader\r\n);\r\n","import { CAP_PRICE_PER_UNIT } from \"./types\";\r\n\r\nexport const capPricePerUnit = (price) => async (dispatch) => {\r\n  dispatch({\r\n    type: CAP_PRICE_PER_UNIT,\r\n    payload: price,\r\n  });\r\n};\r\n","import { CAP_LABEL_UNIT_PRICE } from \"./types\";\r\n\r\nexport const capLabelUnitPrice = (unitPrice) => async (dispatch) => {\r\n  dispatch({\r\n    type: CAP_LABEL_UNIT_PRICE,\r\n    payload: unitPrice,\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { DisplayResultsTable } from \"../../utils/DisplayResultsTable\";\r\n\r\nclass CapsResult extends Component {\r\n  componentDidMount() {\r\n    // Display Table If Its Contains Info\r\n    if (this.props.process_caps_result.type) {\r\n      document.getElementById(\"ToggleCapsDisplayResultBtn\").click();\r\n      sessionStorage.setItem(\"ToggleCapsDisplayResultBtn\", true);\r\n    }\r\n  }\r\n\r\n  toggler() {\r\n    // Toggle Display BTN In Input Field Is Empty\r\n    let toggler = JSON.parse(\r\n      sessionStorage.getItem(\"ToggleCapsDisplayResultBtn\")\r\n    );\r\n\r\n    sessionStorage.setItem(\"ToggleCapsDisplayResultBtn\", !toggler);\r\n  }\r\n  render() {\r\n    const { process_caps_result } = this.props;\r\n\r\n    return (\r\n      <div className=\"card-footer\" style={{ border: \"none\" }}>\r\n        <h4 className=\"row col text-secondary\">Caps Result:</h4>\r\n        <button\r\n          data-target=\"#capsResult\"\r\n          id=\"ToggleCapsDisplayResultBtn\"\r\n          style={{\r\n            boxShadow:\r\n              \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n            borderRadius: \"15px 15px 50px 50px\",\r\n          }}\r\n          className=\"col btn btn-outline-success btn-sm mb-4\"\r\n          data-toggle=\"collapse\"\r\n          onClick={this.toggler}\r\n        >\r\n          View Caps Result:\r\n        </button>\r\n        <div id=\"capsResult\" className=\"col collapse\">\r\n          <DisplayResultsTable result={process_caps_result} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCapsResult.propTypes = {\r\n  process_caps_result: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n  process_caps_result: state.process_caps_result.result,\r\n});\r\n\r\nexport default connect(mapStateToProps)(CapsResult);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { capsPackPieces } from \"../../../actions/capPackPiecesAction\";\r\nimport { processCapsResult } from \"../../../actions/processCapsResultAction\";\r\nimport { calculateCapPieces } from \"../../../actions/calculateCapPiecesAction\";\r\nimport processAllResults from \"../../utils/processAllResults\";\r\n\r\nimport CapsResult from \"../../pages/caps/CapsResult\";\r\nimport { AlertInputDanger } from \"../../utils/AlertInputDanger\";\r\n\r\nclass CapsBody extends Component {\r\n  state = {\r\n    changeCapsPackPieces: \"\",\r\n    capsPiecesInput: \"\",\r\n    capsPiecesInputStep: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    // Hide Alert Note\r\n    document.getElementById(\"capsAlertNote\").style.display = \"none\";\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, preState) {\r\n    return { capsPiecesInputStep: nextProps.capsPiecesPerPack };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // Close Result BTN If Opened\r\n    let toggler = JSON.parse(\r\n      sessionStorage.getItem(\"ToggleCapsDisplayResultBtn\")\r\n    );\r\n\r\n    if (toggler) {\r\n      document.getElementById(\"ToggleCapsDisplayResultBtn\").click();\r\n      sessionStorage.setItem(\"ToggleCapsDisplayResultBtn\", false);\r\n    }\r\n  }\r\n\r\n  valueChanged = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  changeCapPiecesPerPackBtn = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Only Run If User Enters An Input\r\n    const { changeCapsPackPieces } = this.state;\r\n    if (changeCapsPackPieces !== \"\") {\r\n      this.props.capsPackPieces(changeCapsPackPieces);\r\n\r\n      this.setState({ changeCapsPackPieces: \"\" });\r\n    }\r\n  };\r\n\r\n  calculateCapPiecesBtn = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Only Run If User Enters An Input\r\n    const { capsPiecesInput } = this.state;\r\n    if (capsPiecesInput !== \"\") {\r\n      // Display Result By Toggling Result BTN\r\n      let toggler = JSON.parse(\r\n        sessionStorage.getItem(\"ToggleCapsDisplayResultBtn\")\r\n      );\r\n\r\n      if (!toggler) {\r\n        document.getElementById(\"ToggleCapsDisplayResultBtn\").click();\r\n        sessionStorage.setItem(\"ToggleCapsDisplayResultBtn\", true);\r\n      }\r\n\r\n      const {\r\n        cap_price_per_unit,\r\n        capsPiecesPerPack,\r\n        cap_label_unit_price,\r\n      } = this.props;\r\n\r\n      const data = {\r\n        capsPiecesInput,\r\n        type: \"Total Caps\",\r\n        cap_price_per_unit,\r\n        capsPiecesPerPack,\r\n        cap_label_unit_price,\r\n      };\r\n\r\n      const result = this.props.processAllResults(data);\r\n\r\n      this.props.processCapsResult(result);\r\n\r\n      this.setState({ capsPiecesInput: \"\" });\r\n    } else {\r\n      // Display Alert Note\r\n      document.getElementById(\"capsAlertNote\").style.display = \"block\";\r\n\r\n      setTimeout(function () {\r\n        document.getElementById(\"capsAlertNote\").style.display = \"none\";\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      changeCapsPackPieces,\r\n      capsPiecesInput,\r\n      capsPiecesInputStep,\r\n    } = this.state;\r\n    return (\r\n      <div\r\n        className=\"col-sm-11 mx-auto mb-3 py-1\"\r\n        style={{\r\n          borderRadius: \"15px 15px 50px 50px\",\r\n          boxShadow:\r\n            \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n        }}\r\n      >\r\n        <div\r\n          className=\"card mt-2 mb-2\"\r\n          style={{\r\n            borderRadius: \"15px 15px 50px 50px\",\r\n            boxShadow:\r\n              \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n          }}\r\n        >\r\n          <form\r\n            onSubmit={this.changeCapPiecesPerPackBtn}\r\n            className=\"card-header\"\r\n          >\r\n            <h4 className=\"row col text-secondary\">Optional Field:</h4>\r\n            <span className=\"text-secondary h6 float-right\">CAPS</span>\r\n            <small>\r\n              <i className=\"col-md-6 text-dark\">\r\n                <label htmlFor=\"changeCapsPackPieces\">\r\n                  A Pack contains <span id=\"capsPackPieces\"></span> pieces of\r\n                  Caps:\r\n                </label>\r\n              </i>\r\n              <div\r\n                className=\"col-md-6 input-group input-group-sm mb-3\"\r\n                style={{ marginLeft: \"-17px\" }}\r\n              >\r\n                <div className=\"input-group-append\">\r\n                  <button\r\n                    id=\"changeCapsPackPiecesBtn\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{\r\n                      borderRadius: \"50px 15px 50px 15px\",\r\n                      boxShadow:\r\n                        \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n                    }}\r\n                    type=\"submit\"\r\n                  >\r\n                    Change Pieces\r\n                  </button>\r\n                </div>\r\n                <input\r\n                  id=\"changeCapsPackPieces\"\r\n                  style={{ borderRadius: \"50px 15px 50px 15px\" }}\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  min=\"1\"\r\n                  step=\"any\"\r\n                  name=\"changeCapsPackPieces\"\r\n                  placeholder=\"Per Pack\"\r\n                  value={changeCapsPackPieces}\r\n                  onChange={this.valueChanged}\r\n                  required\r\n                />\r\n              </div>\r\n            </small>\r\n          </form>\r\n          <div className=\"card-body bg-secondary text-light\">\r\n            <form className=\"col-md-6 mx-auto\">\r\n              <h4 className=\"row col\" style={{ marginLeft: \"-3vw\" }}>\r\n                <ins>Required Field</ins>:\r\n              </h4>\r\n              <div className=\"form-group\">\r\n                <label htmlhtmlFor=\"email\">\r\n                  <h5 style={{ margin: \"2vh 0 -1vh 0\" }}>\r\n                    <span>Enter Caps Per Pack: </span> <br />\r\n                    <label id=\"totalCapPieces\">\r\n                      <span className=\"col text-body\">Total Pieces</span>\r\n                    </label>\r\n                  </h5>\r\n                </label>\r\n                <div id=\"capsAlertNote\">\r\n                  <AlertInputDanger />\r\n                </div>\r\n                <div className=\"input-group mb-3 input-group-md\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\">Packs</span>\r\n                  </div>\r\n                  <input\r\n                    htmlFor=\"totalCapPieces\"\r\n                    id=\"capsPiecesInput\"\r\n                    className=\"form-control\"\r\n                    type=\"number\"\r\n                    step={String(capsPiecesInputStep)}\r\n                    min={String(capsPiecesInputStep)}\r\n                    name=\"capsPiecesInput\"\r\n                    placeholder=\"Input Caps Packs Number\"\r\n                    value={capsPiecesInput}\r\n                    onChange={this.valueChanged}\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <button\r\n                onClick={this.calculateCapPiecesBtn}\r\n                id=\"submitCaps\"\r\n                className=\"btn btn-success\"\r\n                style={{\r\n                  float: \"right\",\r\n                  boxShadow:\r\n                    \"0 4px 8px 0 rgba(255, 255, 255, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n                  borderRadius: \"50px 50px 15px 15px\",\r\n                }}\r\n                type=\"submit\"\r\n              >\r\n                Calculate Pieces\r\n              </button>\r\n            </form>\r\n          </div>\r\n\r\n          <hr style={{ margin: \"0 20px -6px 20px\" }} />\r\n          {/* submittedCapsAns */}\r\n          <CapsResult />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCapsBody.propTypes = {\r\n  capsPackPieces: PropTypes.func.isRequired,\r\n  calculateCapPieces: PropTypes.func.isRequired,\r\n  processAllResults: PropTypes.func.isRequired,\r\n  processCapsResult: PropTypes.func.isRequired,\r\n  cap_price_per_unit: PropTypes.string.isRequired,\r\n  capsPiecesPerPack: PropTypes.string.isRequired,\r\n  cap_label_unit_price: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  cap_price_per_unit: state.cap_price_per_unit.price,\r\n  capsPiecesPerPack: state.cap_pack_pieces.cap_pieces,\r\n  cap_label_unit_price: state.cap_label_unit_price.label_price,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  capsPackPieces,\r\n  calculateCapPieces,\r\n  processAllResults,\r\n  processCapsResult,\r\n})(CapsBody);\r\n","import { CAP_PACK_PIECES } from \"./types\";\r\n\r\nexport const capsPackPieces = (pieces) => async (dispatch) => {\r\n  dispatch({\r\n    type: CAP_PACK_PIECES,\r\n    payload: pieces,\r\n  });\r\n};\r\n","import { CALCULATE_CAP_PIECES } from \"./types\";\r\n\r\nexport const calculateCapPieces = (pieces) => async (dispatch) => {\r\n  dispatch({\r\n    type: CALCULATE_CAP_PIECES,\r\n    payload: pieces,\r\n  });\r\n};\r\n","import { PROCESS_CAPS_RESULT } from \"./types\";\r\n\r\nexport const processCapsResult = (data) => async (dispatch) => {\r\n  dispatch({\r\n    type: PROCESS_CAPS_RESULT,\r\n    payload: data,\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport CapsHeader from \"./CapsHeader\";\r\nimport CapsBody from \"./CapsBody\";\r\n\r\nimport JSnumberToWordProcessor from \"js-number-to-word-processor\";\r\n\r\nclass Caps extends Component {\r\n  componentDidMount() {\r\n    // Manage How To Use BTN By Setting Display Color To Lightgray On Page Change\r\n    sessionStorage.setItem(\"howToUse\", false);\r\n    document.getElementById(\"howToUseBtn\").style.color = \"lightgray\";\r\n\r\n    // Manage Menu Icons On Page Load\r\n    document.getElementById(\"capsPage\").style.color = \"black\";\r\n    document.getElementById(\"preformPage\").style.color = \"lightgray\";\r\n    document.getElementById(\"aboutPage\").style.color = \"lightgray\";\r\n    document.getElementById(\"formula\").style.color = \"lightgray\";\r\n\r\n    const {\r\n      cap_price_per_unit,\r\n      cap_label_unit_price,\r\n      capsPiecesPerPack,\r\n    } = this.props;\r\n\r\n    document.querySelector(\r\n      \"#capPricePerUnit\"\r\n    ).innerText = JSnumberToWordProcessor(cap_price_per_unit, 2)[0].displayNum;\r\n    document.querySelector(\r\n      \"#capLabelPrice\"\r\n    ).innerText = JSnumberToWordProcessor(\r\n      cap_label_unit_price,\r\n      2\r\n    )[0].displayDecimalNum;\r\n    document.querySelector(\r\n      \"#capsPackPieces\"\r\n    ).innerText = JSnumberToWordProcessor(capsPiecesPerPack, 1)[0].displayNum;\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const {\r\n      cap_price_per_unit,\r\n      cap_label_unit_price,\r\n      capsPiecesPerPack,\r\n    } = this.props;\r\n\r\n    document.querySelector(\r\n      \"#capPricePerUnit\"\r\n    ).innerText = JSnumberToWordProcessor(cap_price_per_unit, 2)[0].displayNum;\r\n    document.querySelector(\r\n      \"#capLabelPrice\"\r\n    ).innerText = JSnumberToWordProcessor(\r\n      cap_label_unit_price,\r\n      2\r\n    )[0].displayDecimalNum;\r\n    document.querySelector(\r\n      \"#capsPackPieces\"\r\n    ).innerText = JSnumberToWordProcessor(capsPiecesPerPack, 1)[0].displayNum;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"card bg-secondary text-light\"\r\n        style={{\r\n          border: \"none\",\r\n          borderRadius: \"15px 15px 50px 50px\",\r\n          boxShadow:\r\n            \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n        }}\r\n      >\r\n        {/* ((((((((((((((((((((((((((((((++++++)))))))))))))))))))))))))))))) */}\r\n        <div\r\n          id=\"demo\"\r\n          className=\"mx-auto collapse mb-2 pr-3\"\r\n          style={{\r\n            borderRadius: \"15px 15px 50px 50px\",\r\n            boxShadow:\r\n              \"0 4px 8px 0 rgba(255, 255, 255, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n          }}\r\n        >\r\n          <h6>\r\n            <ul>\r\n              <li>\r\n                <ins>Optional Fields</ins>:\r\n              </li>\r\n              <ul>\r\n                <li>\r\n                  Only Change The Value In The Optional Field If Your Value For\r\n                  Calculation Is Different From The Default Value\r\n                </li>\r\n              </ul>\r\n            </ul>\r\n          </h6>\r\n          <h6>\r\n            <ul>\r\n              <li>\r\n                <ins>Required Field</ins>:\r\n              </li>\r\n              <ul>\r\n                <li>\r\n                  You Are Required To Enter The Total Pieces Of Caps To Be\r\n                  Calculated In In The \"Total Pieces\" Input Field, Then Click On\r\n                  \"Calculate Pieces\".\r\n                </li>\r\n              </ul>\r\n            </ul>\r\n          </h6>\r\n        </div>\r\n        {/* ((((((((((((((((((((((((((((((++++++)))))))))))))))))))))))))))))) */}\r\n        {/* <!-- Main Head --> */}\r\n        <div\r\n          className=\"card-header\"\r\n          style={{\r\n            backgroundImage:\r\n              \"linear-gradient(lightgray 1%, white 30%, rgb(187, 202, 131) 100%)\",\r\n          }}\r\n        >\r\n          <h4 className=\"col mx-auto text-secondary\">Optional Field:</h4>\r\n          <div className=\"row text-muted\">\r\n            <CapsHeader />\r\n          </div>\r\n        </div>\r\n\r\n        {/* <!-- Main Body --> */}\r\n        <div\r\n          className=\"card-body mt-1 mb-2\"\r\n          style={{\r\n            borderRadius: \"15px 15px 50px 50px\",\r\n            backgroundImage:\r\n              \"linear-gradient(rgb(187, 202, 131) 100%, white 5%, rgb(187, 202, 131) 100%)\",\r\n          }}\r\n        >\r\n          <div>\r\n            <CapsBody />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCaps.propType = {\r\n  cap_price_per_unit: PropTypes.string.isRequired,\r\n  cap_label_unit_price: PropTypes.string.isRequired,\r\n  capsPiecesPerPack: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  cap_price_per_unit: state.cap_price_per_unit.price,\r\n  cap_label_unit_price: state.cap_label_unit_price.label_price,\r\n  capsPiecesPerPack: state.cap_pack_pieces.cap_pieces,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Caps);\r\n","import React, { Component } from \"react\";\r\n\r\nimport Preform_Cap_Logo from \"../layout/Preform_Cap_Logo.png\";\r\n\r\nclass About extends Component {\r\n  componentDidMount() {\r\n    // Hide howToUseBtn In About & Formula Pages\r\n    document.getElementById(\"howToUseBtn\").style.display = \"none\";\r\n\r\n    // Manage Menu Icons On Page Load\r\n    document.getElementById(\"capsPage\").style.color = \"lightgray\";\r\n    document.getElementById(\"preformPage\").style.color = \"lightgray\";\r\n    document.getElementById(\"aboutPage\").style.color = \"black\";\r\n    document.getElementById(\"formula\").style.color = \"lightgray\";\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // Display howToUseBtn After Existing About & Formula Pages\r\n    document.getElementById(\"howToUseBtn\").style.display = \"block\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          borderRadius: \"15px 15px 50px 50px\",\r\n          backgroundColor: \"gray\",\r\n          paddingBottom: \"1px\",\r\n        }}\r\n      >\r\n        <div\r\n          className=\"card-body mt-1 mb-2\"\r\n          style={{\r\n            borderRadius: \"15px 15px 50px 50px\",\r\n            backgroundImage:\r\n              \"linear-gradient(rgb(187, 202, 131) 100%, white 5%, rgb(187, 202, 131) 100%)\",\r\n          }}\r\n        >\r\n          <div>\r\n            <div\r\n              className=\"col-md-11 mx-auto mb-3 py-1\"\r\n              style={{\r\n                borderRadius: \"15px 15px 50px 50px\",\r\n                boxShadow:\r\n                  \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n              }}\r\n            >\r\n              <div\r\n                className=\"card mt-2 mb-2\"\r\n                style={{\r\n                  borderRadius: \"15px 15px 50px 50px\",\r\n                  boxShadow:\r\n                    \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"card\"\r\n                  style={{ borderRadius: \"15px 15px 50px 50px\" }}\r\n                >\r\n                  <div className=\"card-header\">\r\n                    <span className=\"text-primary h4 p-2 float-left\">\r\n                      About\r\n                    </span>\r\n                    <h1\r\n                      className=\"display-4 text-muted p-2 mb-4 text-center\"\r\n                      style={{\r\n                        clear: \"both\",\r\n                        boxShadow:\r\n                          \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      Preform &amp; Caps Calculator <br />\r\n                      <p className=\"text-secondary h6\">Version 0.1.0</p>\r\n                    </h1>\r\n                  </div>\r\n                  <div className=\"card-body bg-secondary text-light\">\r\n                    <article>\r\n                      <header className=\"h3 text-dark\">\r\n                        <ins>What Is Preform</ins>\r\n                      </header>\r\n                      <p className=\"px-3\" style={{ fontSize: \"1.5rem\" }}>\r\n                        A preform is an article made of Polyethylene\r\n                        Terephthalate, commonly known as PET. <br />\r\n                        It is normally manufactured using a mould on an\r\n                        injection system, which is subsequently blown into a\r\n                        container for edible or non-edible liquids (water, soft\r\n                        drinks, milk, alcohol, oils, detergents, personal care)\r\n                        on a blow-moulding system. <br />\r\n                        In practice, what comes out of the machine is a\r\n                        test-tube shaped object with a threaded, finished neck\r\n                        that is then transformed into a customized container\r\n                        used to distinguish a specific brand. The preforms are\r\n                        used both by companies involved in the creation of\r\n                        packaging for third party companies, and by industries\r\n                        that carry out all phases of production in house, from\r\n                        creation of these PET articles to bottling of the end\r\n                        product.\r\n                      </p>\r\n                      <header className=\"h3 text-dark\">\r\n                        <ins>What Is Cap</ins>\r\n                      </header>\r\n                      <p className=\"px-3\" style={{ fontSize: \"1.5rem\" }}>\r\n                        A cap is a protective cover that protects the content of\r\n                        a preform as the preforms neck finish holds the cap\r\n                        threading, with its protruding threads. <br />A preform\r\n                        and its corresponding cap must have matching threading\r\n                        for best fit.\r\n                      </p>\r\n                    </article>\r\n\r\n                    <hr className=\"col-md-8 bg-light mt-5 mx-auto\" />\r\n                    <header className=\"h3 text-dark text-center\">\r\n                      <img\r\n                        src={Preform_Cap_Logo}\r\n                        alt=\"Logo\"\r\n                        style={{ width: \"150px\" }}\r\n                      />\r\n                      <br />\r\n                      <ins>Preform &amp; Caps Calculator</ins>\r\n                    </header>\r\n                    <p\r\n                      className=\"px-3 text-center\"\r\n                      style={{ fontSize: \"1.5rem\" }}\r\n                    >\r\n                      Preform & Caps Calculator is a useful application for\r\n                      calculating the:\r\n                      <li>Total Preform with Caps Quantities</li>\r\n                      <li>Total Kilograms (Kg) Of Preform & Caps</li>\r\n                      <li>Total Carton Of Preform & Caps</li>\r\n                      <li>Total Crates Of Preform & Caps (of 12 Units)</li>\r\n                      <li>Unit &amp; Total Amount</li>\r\n                      of both Preform and Caps needed in production.\r\n                    </p>\r\n                  </div>\r\n                  {/* ((((((((((((((((((((((((((((Start)))))))))))))))))))))))))))) */}\r\n                  <h5 className=\"text-center text-muted\">{/*  */}</h5>\r\n                  <div className=\"card-body bg-secondary text-muted\">`</div>\r\n                  {/* ((((((((((((((((((((((((((((End)))))))))))))))))))))))))))) */}\r\n                  <div className=\"card-footer\">\r\n                    <h6 className=\"text-secondary\">\r\n                      A Progressive Web App (PWA) Developed By\r\n                      <a\r\n                        href=\"https://github.com/Sidodus\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        {\" \"}\r\n                        Sidodus\r\n                      </a>\r\n                    </h6>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Formula extends Component {\r\n  componentDidMount() {\r\n    // Hide howToUseBtn In About & Formula Pages\r\n    document.getElementById(\"howToUseBtn\").style.display = \"none\";\r\n\r\n    // Manage Menu Icons On Page Load\r\n    document.getElementById(\"capsPage\").style.color = \"lightgray\";\r\n    document.getElementById(\"preformPage\").style.color = \"lightgray\";\r\n    document.getElementById(\"aboutPage\").style.color = \"lightgray\";\r\n    document.getElementById(\"formula\").style.color = \"black\";\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // Display howToUseBtn After Existing About & Formula Pages\r\n    document.getElementById(\"howToUseBtn\").style.display = \"block\";\r\n  }\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          borderRadius: \"15px 15px 50px 50px\",\r\n          backgroundColor: \"gray\",\r\n          paddingBottom: \"1px\",\r\n        }}\r\n      >\r\n        <div\r\n          className=\"card-body mt-1 mb-2\"\r\n          style={{\r\n            borderRadius: \"15px 15px 50px 50px\",\r\n            backgroundImage:\r\n              \"linear-gradient(rgb(187, 202, 131) 100%, white 5%, rgb(187, 202, 131) 100%)\",\r\n          }}\r\n        >\r\n          <div>\r\n            <div\r\n              className=\"col-md-11 mx-auto mb-3 py-1\"\r\n              style={{\r\n                borderRadius: \"15px 15px 50px 50px\",\r\n                boxShadow:\r\n                  \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n              }}\r\n            >\r\n              <div\r\n                className=\"card mt-2 mb-2\"\r\n                style={{\r\n                  borderRadius: \"15px 15px 50px 50px\",\r\n                  boxShadow:\r\n                    \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"card\"\r\n                  style={{ borderRadius: \"15px 15px 50px 50px\" }}\r\n                >\r\n                  <div className=\"card-header\">\r\n                    <h4>\r\n                      Preform &amp; Caps Calculator Formula <br />\r\n                      <sup className=\"text-muted\">v0.1.0</sup>\r\n                    </h4>\r\n\r\n                    <h5\r\n                      className=\"text-center text-muted\"\r\n                      style={{ marginBottom: \"-1vh\" }}\r\n                    >\r\n                      Preform Formula <i className=\"fa fa-hand-point-down\" />\r\n                    </h5>\r\n                  </div>\r\n                  <div className=\"card-body bg-secondary text-light\">\r\n                    <ol>\r\n                      <li className=\"h5\">\r\n                        <ins className=\"text-dark\">Total Packs</ins>\r\n                        <ul style={{ listStyleType: \"disc\" }}>\r\n                          <ul>\r\n                            <li>\r\n                              Preform Pieces Input / Preform Pieces Per Pack\r\n                            </li>\r\n                          </ul>\r\n                        </ul>\r\n                      </li>\r\n                      <hr className=\"bg-light\" />\r\n                      <li className=\"h5\">\r\n                        <ins className=\"text-dark\">Total Kg</ins>\r\n                        <ul style={{ listStyleType: \"disc\" }}>\r\n                          <ins className=\"text-dark\">Total Grams / 1000</ins>\r\n                          <ul>\r\n                            <li>\r\n                              (Preform Pieces Input * Preform Grams) / 1000\r\n                            </li>\r\n                          </ul>\r\n                        </ul>\r\n                      </li>\r\n                      <hr className=\"bg-light\" />\r\n                      <li className=\"h5\">\r\n                        <ins className=\"text-dark\">Total Crates</ins>\r\n                        <ul style={{ listStyleType: \"disc\" }}>\r\n                          <ul>\r\n                            <li>Preform Pieces Input / 12</li>\r\n                          </ul>\r\n                        </ul>\r\n                      </li>\r\n                      <hr className=\"bg-light\" />\r\n                      <li className=\"h5\">\r\n                        <ins className=\"text-dark\">Total Amount</ins>\r\n                        <ul style={{ listStyleType: \"disc\" }}>\r\n                          <ins className=\"text-dark\">\r\n                            Total Kg * Preform Price Per Kg\r\n                          </ins>\r\n                          <ul>\r\n                            <li>\r\n                              ((Preform Pieces Input * Preform Grams) / 1000) *\r\n                              Preform Price Per Kg\r\n                            </li>\r\n                          </ul>\r\n                        </ul>\r\n                      </li>\r\n                      <hr className=\"bg-light\" />\r\n                      <li className=\"h5\">\r\n                        <ins className=\"text-dark\">Preform Unit Amount</ins>\r\n                        <ul style={{ listStyleType: \"disc\" }}>\r\n                          <ins className=\"text-dark\">\r\n                            Total Amount / Preform Pieces Input\r\n                          </ins>\r\n                          <ul>\r\n                            <li>\r\n                              (((Preform Pieces Input * Preform Grams) / 1000) *\r\n                              Preform Price Per Kg) / Preform Pieces Input\r\n                            </li>\r\n                          </ul>\r\n                        </ul>\r\n                      </li>\r\n                      <hr className=\"bg-light\" />\r\n                    </ol>\r\n                  </div>\r\n\r\n                  <h5 className=\"text-center text-muted\">\r\n                    Kg Formula <i className=\"fa fa-hand-point-down mt-3\" />\r\n                  </h5>\r\n                  <div className=\"card-body bg-secondary text-light\">\r\n                    <ol>\r\n                      <li className=\"h5\">\r\n                        <ins className=\"text-dark\">Preform Kg Per Pack</ins>\r\n                        <ul style={{ listStyleType: \"disc\" }}>\r\n                          <ul>\r\n                            <li>\r\n                              (Preform Pieces Per Pack * Preform Grams) / 1000\r\n                            </li>\r\n                          </ul>\r\n                        </ul>\r\n                      </li>\r\n                      <hr className=\"bg-light\" />\r\n                      <li className=\"h5\">\r\n                        <ins className=\"text-dark\">Total Preform Pieces</ins>\r\n                        <ul style={{ listStyleType: \"disc\" }}>\r\n                          <ins className=\"text-dark\">\r\n                            Preform Kg Input / Preform Kg Per Pack * Preform\r\n                            Pieces Per Pack\r\n                          </ins>\r\n                          <ul>\r\n                            <li>\r\n                              (Preform Kg Input / ((Preform Pieces Per Pack *\r\n                              Preform Grams) / 1000)) * Preform Pieces Per Pack\r\n                            </li>\r\n                          </ul>\r\n                        </ul>\r\n                      </li>\r\n                      <hr className=\"bg-light\" />\r\n                      <li className=\"h5\">\r\n                        <ins className=\"text-dark\">Total Packs</ins>\r\n                        <ul style={{ listStyleType: \"disc\" }}>\r\n                          <ins className=\"text-dark\">\r\n                            Preform Kg Input / Preform Kg Per Pack\r\n                          </ins>\r\n                          <ul>\r\n                            <li>\r\n                              Preform Kg Input / ((Preform Pieces Per Pack *\r\n                              Preform Grams) / 1000)\r\n                            </li>\r\n                          </ul>\r\n                        </ul>\r\n                      </li>\r\n                      <hr className=\"bg-light\" />\r\n                      <li className=\"h5\">\r\n                        <ins className=\"text-dark\">Total Crates</ins>\r\n                        <ul style={{ listStyleType: \"disc\" }}>\r\n                          <ins className=\"text-dark\">\r\n                            Total Preform Pieces / 12\r\n                          </ins>\r\n                          <ul>\r\n                            <li>\r\n                              ((Preform Kg Input / ((Preform Pieces Per Pack *\r\n                              Preform Grams) / 1000)) * Preform Pieces Per Pack)\r\n                              / 12\r\n                            </li>\r\n                          </ul>\r\n                        </ul>\r\n                      </li>\r\n                      <hr className=\"bg-light\" />\r\n                      <li className=\"h5\">\r\n                        <ins className=\"text-dark\">Total Amount</ins>\r\n                        <ul style={{ listStyleType: \"disc\" }}>\r\n                          <ul>\r\n                            <li>Total Kg * Preform Price Per Kg</li>\r\n                          </ul>\r\n                        </ul>\r\n                      </li>\r\n                      <hr className=\"bg-light\" />\r\n                      <li className=\"h5\">\r\n                        <ins className=\"text-dark\">Unit Amount</ins>\r\n                        <ul style={{ listStyleType: \"disc\" }}>\r\n                          <ins className=\"text-dark\">\r\n                            Total Amount / Total Preform Pieces\r\n                          </ins>\r\n                          <ul>\r\n                            <li>\r\n                              (Total Kg * Preform Price Per Kg) / (Preform Kg\r\n                              Input / ((Preform Pieces Per Pack *Preform Grams)\r\n                              / 1000)) * Preform Pieces Per Pack\r\n                            </li>\r\n                          </ul>\r\n                        </ul>\r\n                      </li>\r\n                      <hr className=\"bg-light\" />\r\n                    </ol>\r\n                  </div>\r\n\r\n                  <h5 className=\"text-center text-muted\">\r\n                    Caps Formula <i className=\"fa fa-hand-point-down mt-3\" />\r\n                  </h5>\r\n                  <div className=\"card-body bg-secondary text-light\">\r\n                    <ol>\r\n                      <li className=\"h5\">\r\n                        <ins className=\"text-dark\">Total Packs</ins>\r\n                        <ul style={{ listStyleType: \"disc\" }}>\r\n                          <ul>\r\n                            <li>Cap Pieces Input / Caps Pieces Per Pack</li>\r\n                          </ul>\r\n                        </ul>\r\n                      </li>\r\n                      <hr className=\"bg-light\" />\r\n\r\n                      <li className=\"h5\">\r\n                        <ins className=\"text-dark\">Total Crates</ins>\r\n                        <ul style={{ listStyleType: \"disc\" }}>\r\n                          <ul>\r\n                            <li>Caps Pieces Input / 12</li>\r\n                          </ul>\r\n                        </ul>\r\n                      </li>\r\n                      <hr className=\"bg-light\" />\r\n\r\n                      <li className=\"h5\">\r\n                        <ins className=\"text-dark\">Cap Label Total Price</ins>\r\n                        <ul style={{ listStyleType: \"disc\" }}>\r\n                          <ul>\r\n                            <li>Cap Label Price Per Unit * Cap Pieces Input</li>\r\n                          </ul>\r\n                        </ul>\r\n                      </li>\r\n                      <hr className=\"bg-light\" />\r\n\r\n                      <li className=\"h5\">\r\n                        <ins className=\"text-dark\">Cap Total Amount</ins>\r\n                        <ul style={{ listStyleType: \"disc\" }}>\r\n                          <ins className=\"text-dark\">\r\n                            Cap Price Per Unit * Caps Pieces Input + Cap Label\r\n                            Total Price\r\n                          </ins>\r\n                          <ul>\r\n                            <li>\r\n                              (Cap Price Per Unit * Caps Pieces Input) + (Cap\r\n                              Label Unit Price * Cap Pieces Input)\r\n                            </li>\r\n                          </ul>\r\n                        </ul>\r\n                      </li>\r\n                      <hr className=\"bg-light\" />\r\n\r\n                      <li className=\"h5\">\r\n                        <ins className=\"text-dark\">Cap Unit Amount</ins>\r\n                        <ul style={{ listStyleType: \"disc\" }}>\r\n                          <ul>\r\n                            <li>\r\n                              Cap Price Per Unit + Cap Label Price Per Unit\r\n                            </li>\r\n                          </ul>\r\n                        </ul>\r\n                      </li>\r\n                      <hr className=\"bg-light\" />\r\n                    </ol>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"card-footer\">\r\n                  <h6 className=\"text-secondary\">\r\n                    Developed by\r\n                    <a\r\n                      href=\"https://github.com/Sidodus\"\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      {\" \"}\r\n                      Sidodus\r\n                    </a>\r\n                  </h6>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass NotFound extends Component {\r\n  componentDidMount() {\r\n    // Hide howToUseBtn In About & Formula Pages\r\n    document.getElementById(\"howToUseBtn\").style.display = \"none\";\r\n\r\n    // Manage Menu Icons On Page Load\r\n    document.getElementById(\"capsPage\").style.color = \"lightgray\";\r\n    document.getElementById(\"preformPage\").style.color = \"lightgray\";\r\n    document.getElementById(\"aboutPage\").style.color = \"lightgray\";\r\n    document.getElementById(\"formula\").style.color = \"lightgray\";\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // Display howToUseBtn After Existing About & Formula Pages\r\n    document.getElementById(\"howToUseBtn\").style.display = \"block\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          borderRadius: \"15px 15px 50px 50px\",\r\n          backgroundColor: \"gray\",\r\n          paddingBottom: \"1px\",\r\n        }}\r\n      >\r\n        <div\r\n          className=\"card-body mt-1 mb-2\"\r\n          style={{\r\n            borderRadius: \"15px 15px 50px 50px\",\r\n            backgroundImage:\r\n              \"linear-gradient(rgb(187, 202, 131) 100%, white 5%, rgb(187, 202, 131) 100%)\",\r\n          }}\r\n        >\r\n          <div>\r\n            <div\r\n              className=\"col-md-11 mx-auto mb-3 py-1\"\r\n              style={{\r\n                borderRadius: \"15px 15px 50px 50px\",\r\n                boxShadow:\r\n                  \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n              }}\r\n            >\r\n              <div\r\n                className=\"card mt-2 mb-2\"\r\n                style={{\r\n                  borderRadius: \"15px 15px 50px 50px\",\r\n                  boxShadow:\r\n                    \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"card\"\r\n                  style={{ borderRadius: \"15px 15px 50px 50px\" }}\r\n                >\r\n                  <div className=\"card-header\">\r\n                    <h4 className=\"text-center\">\r\n                      <span className=\"text-danger display-4\"> 404 </span> Page\r\n                      Not Found\r\n                    </h4>\r\n                  </div>\r\n                  <div className=\"card-body bg-secondary text-light\">\r\n                    <p className=\"text-center lead\">\r\n                      Sorry!!! The Requested Page Is Not Available.\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"card-footer\">\r\n                    <p className=\"h5 text-secondary pb-3 text-center\">\r\n                      Return To <Link to=\"/\">Application</Link>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    // Set Footer Year\r\n    const thisYear = new Date(\"2020\").getFullYear();\r\n    let presentYear = new Date().getFullYear();\r\n\r\n    return (\r\n      <footer\r\n        className=\"container mx-auto pointerScale small\"\r\n        style={{\r\n          color: \"black\",\r\n          textAlign: \"center\",\r\n          marginTop: \"10px\",\r\n          marginBottom: \"7px\",\r\n          paddingBottom: \"7px\",\r\n        }}\r\n      >\r\n        <div className=\"row animated bounceInLeft slower\">\r\n          <div className=\"col-md-12\">\r\n            Copyright (c){\" \"}\r\n            <span id=\"copyRightYear\">\r\n              {thisYear === presentYear\r\n                ? thisYear\r\n                : thisYear < presentYear\r\n                ? thisYear + \" - \" + presentYear\r\n                : null}{\" \"}\r\n            </span>{\" \"}\r\n            <a\r\n              href=\"https://www.linkedin.com/in/saheed-odulaja-75111337\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Saheed Odulaja\r\n            </a>{\" \"}\r\n            <br />\r\n            <br />\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport Header from \"./components/layout/Header\";\nimport Preform from \"./components/pages/preform/Preform\";\nimport Caps from \"./components/pages/caps/Caps\";\nimport About from \"./components/pages/About\";\nimport Formula from \"./components/pages/Formula\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Footer from \"./components/layout/Footer\";\n\nimport \"bootstrap/dist/js/bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"@fortawesome\\\\\\\\fontawesome-free/css/all.min.css\";\n\nclass App extends Component {\n  componentDidMount() {\n    // Preset Toggler For Preform Required Field\n    sessionStorage.setItem(\"TogglePreformDisplayResultBtn\", false);\n    sessionStorage.setItem(\"ToggleCapsDisplayResultBtn\", false);\n  }\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\" component={Preform} />\n            <Route exact path=\"/caps\" component={Caps} />\n            <Route exact path=\"/about\" component={About} />\n            <Route exact path=\"/formula\" component={Formula} />\n            <Route component={NotFound} />\n          </Switch>\n          <Footer />\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nimport { desktopPwa } from \"./components/utils/desktopPwa\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// PWA For Desktop\ndesktopPwa();\n","export function desktopPwa() {\r\n  let deferredPrompt;\r\n  const addBtn = document.querySelector(\".add-button\");\r\n  addBtn.style.display = \"none\";\r\n\r\n  window.addEventListener(\"beforeinstallprompt\", (e) => {\r\n    // Prevent Chrome 67 and earlier from automatically showing the prompt\r\n    e.preventDefault();\r\n    // Stash the event so it can be triggered later.\r\n    deferredPrompt = e;\r\n    // Update UI to notify the user they can add to home screen\r\n    addBtn.style.display = \"block\";\r\n\r\n    addBtn.addEventListener(\"click\", (e) => {\r\n      // hide our user interface that shows our A2HS button\r\n      addBtn.style.display = \"none\";\r\n      // Show the prompt\r\n      deferredPrompt.prompt();\r\n      // Wait for the user to respond to the prompt\r\n      deferredPrompt.userChoice.then((choiceResult) => {\r\n        if (choiceResult.outcome === \"accepted\") {\r\n          console.log(\"User accepted the A2HS prompt\");\r\n        } else {\r\n          console.log(\"User dismissed the A2HS prompt\");\r\n        }\r\n        deferredPrompt = null;\r\n      });\r\n    });\r\n  });\r\n\r\n  window.addEventListener(\"appinstalled\", (e) => {\r\n    // Log Install To Analytics\r\n    console.log(\"INSTALL:\", \"Success\");\r\n    console.log(\"Installed Element:\", e);\r\n  });\r\n}\r\n"],"sourceRoot":""}